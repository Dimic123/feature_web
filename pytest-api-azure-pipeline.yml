# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python312:
      python.version: '3.12'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    echo "##vso[task.setvariable variable=currentDirectory;]$(Build.SourcesDirectory)"
  displayName: 'Saving variable value'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import subprocess, glob
      test_api_path = f"$(currentDirectory)/RunTestsAPI.py"
      subprocess.run(["python", test_api_path, "-e='test'", "-ap='aws'"])
      print(glob.glob(f"$(currentDirectory)/*"))
  displayName: 'Run python script'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import glob
      print(glob.glob(f"$(currentDirectory)/SharedData/*"))
      shared_files = glob.glob(f"$(currentDirectory)/SharedData/*")
      print(shared_files)
  displayName: 'Save shared files'

- script: |
    echo "##vso[task.uploadfile]$(Build.SourcesDirectory)/SharedData/collected_wizards_all.json"
  displayName: 'Upload report logs from pipeline run script'

- pwsh: Write-Host "##vso[task.uploadfile]$(Build.SourcesDirectory)/SharedData"
  displayName: 'Upload report logs from pipeline run'
  condition: always()